root@NetworkAutomation-1:~# vi list-manipulation
root@NetworkAutomation-1:~# python
Python 2.7.12 (default, Dec  4 2017, 14:50:18)
[GCC 5.4.0 20160609] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>> hosts=['r1','r2','s1','r3','r4']
>>> prints hosts.sort()
  File "<stdin>", line 1
    prints hosts.sort()
               ^
SyntaxError: invalid syntax
>>> device={"hostname":"r1","vendor":"juniper","os":"12.1"}
>>> device["hostname"]
'r1'
>>> print device["vendor"]
juniper
>>> device.get("hostname")
'r1'
>>> print device.get("hostname")
r1
>>> dict1={"mykey","v"}
>>> dict1.update(device)
>>> dict1
set(['vendor', 'hostname', 'os', 'mykey', 'v'])
>>> #### i.e. added the device dictionary to the dict1 dictionary
...
>>> device.keys()
['os', 'hostname', 'vendor']
>>> device.values()
['12.1', 'r1', 'juniper']
>>> for k, v in device.items()
  File "<stdin>", line 1
    for k, v in device.items()
                             ^
SyntaxError: invalid syntax
>>> for k, v in device.items():
...  print ("key is" + k + "value is" + v)
...
...
key isosvalue is12.1
key ishostnamevalue isr1
key isvendorvalue isjuniper
>>> dir dict1.update()
  File "<stdin>", line 1
    dir dict1.update()
            ^
SyntaxError: invalid syntax
>>>  dict1.update()
  File "<stdin>", line 1
    dict1.update()
    ^
IndentationError: unexpected indent
>>> dict1
set(['vendor', 'hostname', 'os', 'mykey', 'v'])
>>> device["hostname"]="router1"
>>>

